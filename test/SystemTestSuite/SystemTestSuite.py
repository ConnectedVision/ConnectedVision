import argparse
import distutils.spawn
import os
import platform
import subprocess
import sys

# check if node (Node.js executable) is found on the system path
if not distutils.spawn.find_executable("node"):
	scriptFile = "activate." + ("bat" if platform.system() == "Windows" else "sh")
	
	raise Exception("\n\nFailed to locate node (Node.js executable).\nPlease execute the Node.js environment activation script" + (" by calling \"source ./" + scriptFile + "\"" if platform.system() == "Linux" else "") + ".\nThe " + scriptFile + " file is generated by Conan when calling the following command:\nconan install Node.js/x.y.z@covi/stable -b outdated -g virtualenv")

parser = argparse.ArgumentParser(description="System Test Suite for Connected Vision module configs and module config chains.")
parser.add_argument("-a", "--arch", help="build architecture", type=str, required=True, choices=["Win32", "x64", "x86", "x86_64"])
parser.add_argument("-e", "--executable", help="file path of the executable", type=str, required=True)
parser.add_argument("-r", "--root", help="root directory which contains the module (subdirectories) to be tested", type=str, required=True)
parser.add_argument("-f", "--file", help="System Test Suite config file", type=str, required=False)
args = parser.parse_args()

suiteRootDir = os.path.dirname(os.path.realpath(__file__))

if args.file:
	configFile = args.file
else:
	configFile = os.path.join(suiteRootDir, "config.joe.json")

print("")
print("starting System Test Suite ...")
print("")
print("arch:        " + args.arch)
print("executable:  " + args.executable)
print("root dir:    " + args.root)
print("config file: " + configFile)
print("")

subprocess.check_call(["node", os.path.splitext(__file__)[0] + ".js", "--no-colors", "--configfile", configFile, "--rootdir", args.root, "--executable", args.executable, "--architecture", args.arch], cwd=suiteRootDir)
