diff --git a/PocoMacros.cmake b/PocoMacros.cmake
--- a/PocoMacros.cmake
+++ b/PocoMacros.cmake
@@ -9,31 +9,69 @@
 # Find the Microsoft mc.exe message compiler
 #
 #  CMAKE_MC_COMPILER - where to find mc.exe
+
+function(getSubdirList dirPath result)
+	file(GLOB subdirs RELATIVE ${dirPath} ${dirPath}/*)
+	
+	foreach(subdir ${subdirs})
+		if(IS_DIRECTORY ${dirPath}/${subdir})
+			LIST(APPEND ${result} ${subdir})
+		endif()
+	endforeach()
+	
+	set(${result} ${${result}} PARENT_SCOPE)
+endfunction()
+
 if (WIN32)
-  # cmake has CMAKE_RC_COMPILER, but no message compiler
-  if ("${CMAKE_GENERATOR}" MATCHES "Visual Studio")
-    # this path is only present for 2008+, but we currently require PATH to
-    # be set up anyway
-    get_filename_component(sdk_dir "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows;CurrentInstallFolder]" REALPATH)
-    get_filename_component(kit_dir "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots;KitsRoot]" REALPATH)
-    get_filename_component(kit81_dir "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots;KitsRoot81]" REALPATH)
-    if (X64)
-      set(sdk_bindir "${sdk_dir}/bin/x64")
-      set(kit_bindir "${kit_dir}/bin/x64")
-      set(kit81_bindir "${kit81_dir}/bin/x64")
-    else (X64)
-      set(sdk_bindir "${sdk_dir}/bin")
-      set(kit_bindir "${kit_dir}/bin/x86")
-      set(kit81_bindir "${kit81_dir}/bin/x86")
-    endif (X64)
-  endif ()
-  find_program(CMAKE_MC_COMPILER mc.exe HINTS "${sdk_bindir}" "${kit_bindir}" "${kit81_bindir}"
-    DOC "path to message compiler")
-  if (NOT CMAKE_MC_COMPILER)
-    message(FATAL_ERROR "message compiler not found: required to build")
-  endif (NOT CMAKE_MC_COMPILER)
-  message(STATUS "Found message compiler: ${CMAKE_MC_COMPILER}")
-  mark_as_advanced(CMAKE_MC_COMPILER)
+	# cmake has CMAKE_RC_COMPILER, but no message compiler
+	if("${CMAKE_GENERATOR}" MATCHES "Visual Studio")
+		set(kitDirRegPaths
+			"[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots;KitsRoot]"
+			"[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots;KitsRoot81]"
+			"[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots;KitsRoot10]"
+		)
+		
+		foreach(kitDirRegPath ${kitDirRegPaths})
+			get_filename_component(sdk_dir "[HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows;CurrentInstallFolder]" REALPATH)
+			get_filename_component(kit_dir "${kitDirRegPath}" REALPATH)
+			
+			set(subdirNames "/;")
+			getSubdirList("${kit_dir}/bin" subdirNames)
+			
+			foreach(subdirName ${subdirNames})
+				if(NOT subdirName MATCHES "/")
+					set(name "/${subdirName}")
+				endif()
+			
+				if(X64)
+					set(sdk_bindir "${sdk_dir}/bin/x64")
+					set(kit_bindir "${kit_dir}/bin${name}/x64")
+				else()
+					set(sdk_bindir "${sdk_dir}/bin")
+					set(kit_bindir "${kit_dir}/bin${name}/x86")
+				endif()
+				
+				find_program(CMAKE_MC_COMPILER mc.exe HINTS "${sdk_bindir}" "${kit_bindir}" DOC "path to message compiler")
+				
+				if(CMAKE_MC_COMPILER)
+					break()
+				endif()
+			endforeach()
+			
+			if(CMAKE_MC_COMPILER)
+				break()
+			endif()
+		endforeach()
+	else()
+		find_program(CMAKE_MC_COMPILER mc.exe HINTS "${sdk_bindir}" "${kit_bindir}" DOC "path to message compiler")
+	endif()
+	
+	if (NOT CMAKE_MC_COMPILER)
+		message(FATAL_ERROR "message compiler not found: required to build")
+	endif (NOT CMAKE_MC_COMPILER)
+	
+	message(STATUS "Found message compiler: ${CMAKE_MC_COMPILER}")
+	mark_as_advanced(CMAKE_MC_COMPILER)
 endif(WIN32)
 
 #===============================================================================
